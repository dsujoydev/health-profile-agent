/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WorkoutsRouteImport } from './routes/workouts'
import { Route as AssessmentRouteImport } from './routes/assessment'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const WorkoutsRoute = WorkoutsRouteImport.update({
  id: '/workouts',
  path: '/workouts',
  getParentRoute: () => rootRouteImport,
} as any)
const AssessmentRoute = AssessmentRouteImport.update({
  id: '/assessment',
  path: '/assessment',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/assessment': typeof AssessmentRoute
  '/workouts': typeof WorkoutsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/assessment': typeof AssessmentRoute
  '/workouts': typeof WorkoutsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/assessment': typeof AssessmentRoute
  '/workouts': typeof WorkoutsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/assessment' | '/workouts'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/assessment' | '/workouts'
  id: '__root__' | '/' | '/about' | '/assessment' | '/workouts'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AssessmentRoute: typeof AssessmentRoute
  WorkoutsRoute: typeof WorkoutsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/workouts': {
      id: '/workouts'
      path: '/workouts'
      fullPath: '/workouts'
      preLoaderRoute: typeof WorkoutsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assessment': {
      id: '/assessment'
      path: '/assessment'
      fullPath: '/assessment'
      preLoaderRoute: typeof AssessmentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AssessmentRoute: AssessmentRoute,
  WorkoutsRoute: WorkoutsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
